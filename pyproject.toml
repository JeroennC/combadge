[tool.poetry]
authors = ["Pavel Perestoronin <pavel.perestoronin@kpn.com>"]
description = "Generic API client based on Pydantic"
keywords = ["api", "api-client", "pydantic"]
license = "Apache-2.0"
name = "combadge"
readme = "README.md"
repository = "https://github.com/kpn/combadge"
version = "0.1.0"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: System",
    "Topic :: System :: Networking",
    "Typing :: Typed",
]

[tool.black]
line-length = 120
target_version = ["py38", "py39", "py310", "py311"]

[tool.isort]
combine_as_imports = true
default_section = "THIRDPARTY"
force_grid_wrap = 0
from_first = false
include_trailing_comma = true
known_first_party = ["cachetory", "tests"]
length_sort = false
line_length = 120
multi_line_output = 3
order_by_type = true
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
use_parentheses = true

[tool.mypy]
allow_redefinition = true
allow_untyped_globals = true
check_untyped_defs = true
ignore_missing_imports = true
pretty = true

[tool.ruff]
line-length = 120
target-version = "py38"
select = [
    "A",
    "ANN",
    "B",
    "C4",
    "COM",
    "D",
    "E",
    "F",
    "I",
    "N",
    "PIE",
    "PT",
    "PTH",
    "RET",
    "SIM",
    "T20",
    "TRY",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "ANN101",
    "ANN102",
    "ANN401",
    "D100",
    "D103",
    "D104",
    "D202",
    "D203",
    "D212",  # alternative of D213
    "D406",
    "D407",
    "PT011",
    "PT013",
    "RET505",
    "TRY003",
    "UP006",  # 3.9
    "UP007",  # 3.10
    "UP033",  # 3.9
]
unfixable = ["B"]

[tool.ruff.per-file-ignores]
"tests/*" = ["D101", "D102"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.coverage.run]
branch = true
omit = ["tests/*"]
source = ["combadge"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "except ImportError",
    "if TYPE_CHECKING:",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.8.1"
typing-extensions = "^4.4.0"
pydantic = "^1.10.4"
zeep = {version = "^4.2.1", optional = true}
httpx = {version = "^0.23.3", optional = true}

[tool.poetry.extras]
async = ["httpx"]
zeep = ["zeep"]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
mypy = { git = "https://github.com/python/mypy.git", rev = "757e0d4894d68b43810d5723ad496c268a850468" }
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
types-requests = "^2.28.11.8"
ruff = "^0.0.236"
